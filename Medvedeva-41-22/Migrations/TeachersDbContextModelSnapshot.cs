// <auto-generated />
using System;
using Medvedeva_41_22.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Medvedeva_41_22.Migrations
{
    [DbContext(typeof(TeachersDbContext))]
    partial class TeachersDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Medvedeva_41_22.Models.Cafedra", b =>
                {
                    b.Property<int>("CafedraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Cafedra_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CafedraId"), 1L, 1);

                    b.Property<string>("CafedraName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Cafedra_Name");

                    b.Property<int?>("HeadId")
                        .HasColumnType("int4")
                        .HasColumnName("Head_ID");

                    b.Property<int>("Year")
                        .HasColumnType("int4")
                        .HasColumnName("Year");

                    b.HasKey("CafedraId")
                        .HasName("pk_Cafedra_cafedra_id");

                    b.HasIndex("HeadId")
                        .IsUnique()
                        .HasFilter("[Head_ID] IS NOT NULL");

                    b.HasIndex(new[] { "HeadId" }, "idx_Cafedra_fk_head_id");

                    b.ToTable("Cafedra", (string)null);
                });

            modelBuilder.Entity("Medvedeva_41_22.Models.Degree", b =>
                {
                    b.Property<int>("DegreeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Degree_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DegreeId"), 1L, 1);

                    b.Property<string>("DegreeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Degree_Name");

                    b.HasKey("DegreeId")
                        .HasName("pk_Degree_degree_id");

                    b.ToTable("Degree");
                });

            modelBuilder.Entity("Medvedeva_41_22.Models.Lessons", b =>
                {
                    b.Property<int>("LessonsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Lessons_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LessonsId"), 1L, 1);

                    b.Property<int>("Hours")
                        .HasColumnType("int4")
                        .HasColumnName("Hours");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int4")
                        .HasColumnName("Subject_ID");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int4")
                        .HasColumnName("Teacher_ID");

                    b.HasKey("LessonsId")
                        .HasName("pk_Lessons_lessons_id");

                    b.HasIndex(new[] { "SubjectId" }, "idx_Lessons_fk_subject_id");

                    b.HasIndex(new[] { "TeacherId" }, "idx_Lessons_fk_teacher_id");

                    b.ToTable("Lessons", (string)null);
                });

            modelBuilder.Entity("Medvedeva_41_22.Models.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Position_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PositionId"), 1L, 1);

                    b.Property<string>("PositionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Position_Name");

                    b.HasKey("PositionId")
                        .HasName("pk_Position_position_id");

                    b.ToTable("Position");
                });

            modelBuilder.Entity("Medvedeva_41_22.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Subject_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"), 1L, 1);

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Subject_Name");

                    b.HasKey("SubjectId")
                        .HasName("pk_Subject_subject_id");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("Medvedeva_41_22.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Teacher_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherId"), 1L, 1);

                    b.Property<int>("CafedraId")
                        .HasColumnType("int4")
                        .HasColumnName("Cafedra_ID");

                    b.Property<int>("DegreeId")
                        .HasColumnType("int4")
                        .HasColumnName("Degree_ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Name");

                    b.Property<string>("Patronym")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Patronym");

                    b.Property<int>("PositionId")
                        .HasColumnType("int4")
                        .HasColumnName("Position_ID");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Surname");

                    b.HasKey("TeacherId")
                        .HasName("pk_Teacher_teacher_id");

                    b.HasIndex(new[] { "CafedraId" }, "idx_Teacher_fk_cafedra_id");

                    b.HasIndex(new[] { "DegreeId" }, "idx_Teacher_fk_degree_id");

                    b.HasIndex(new[] { "PositionId" }, "idx_Teacher_fk_position_id");

                    b.ToTable("Teacher", (string)null);
                });

            modelBuilder.Entity("Medvedeva_41_22.Models.Cafedra", b =>
                {
                    b.HasOne("Medvedeva_41_22.Models.Teacher", "Head")
                        .WithOne()
                        .HasForeignKey("Medvedeva_41_22.Models.Cafedra", "HeadId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("fk_head_id");

                    b.Navigation("Head");
                });

            modelBuilder.Entity("Medvedeva_41_22.Models.Lessons", b =>
                {
                    b.HasOne("Medvedeva_41_22.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_subject_id");

                    b.HasOne("Medvedeva_41_22.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_teacher_id");

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Medvedeva_41_22.Models.Teacher", b =>
                {
                    b.HasOne("Medvedeva_41_22.Models.Cafedra", "Cafedra")
                        .WithMany()
                        .HasForeignKey("CafedraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_cafedra_id");

                    b.HasOne("Medvedeva_41_22.Models.Degree", "Degree")
                        .WithMany()
                        .HasForeignKey("DegreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_degree_id");

                    b.HasOne("Medvedeva_41_22.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_position_id");

                    b.Navigation("Cafedra");

                    b.Navigation("Degree");

                    b.Navigation("Position");
                });
#pragma warning restore 612, 618
        }
    }
}
